#!/bin/bash
set -e

########################################################################
#
# Simple Node.js installer for Windows and Git Bash
#
########################################################################

function usage {
  cat <<EOF
Usage: nvmk {command} {node_version}

  nvmk ls                                 - List installed Node.js
  nvmk i          {node_version}          - Install Node.js
  nvmk rm         {node_version}          - Uninstall Node.js
  nvmk root       {node_version}          - Print absolute path of installed Node.js
  nvmk npm-i      {node_version}          - (Re)Install NPM
  nvmk npm-ls     {node_version}          - List NPM global packages
  nvmk npm-i-pkgs {node_version} {from}   - Install NPM global packages

EOF
  exit
}

NVMK_CMD=$1
NODE_VERSION=$2
NVMK_DIR=${HOME}/.nvmk
NVMK_CACHE_DIR=${NVMK_DIR}/cache
NODE_DIR=${NVMK_DIR}/${NODE_VERSION}
NODE_EXE=${NODE_DIR}/node.exe
NODE_EXE_CACHE=${NVMK_CACHE_DIR}/node-${NODE_VERSION}.exe
NODE_URL=https://nodejs.org/dist/${NODE_VERSION}

if [[ "$NODE_VERSION" =~ ^v0.+$ ]]
then
  NODE_EXE_PATH=x64/node.exe
else
  NODE_EXE_PATH=win-x64/node.exe
fi

NODE_EXE_REMOTE=${NODE_URL}/${NODE_EXE_PATH}

test $# -eq 0 && usage

mkdir -p $NVMK_DIR

function npm_install {
  if [ ! -d $NODE_DIR ]
  then
    echo "Not installed ${NODE_VERSION}"
    exit 1
  fi

  local NPM_REMOTE=https://www.npmjs.com/install.sh
  local NPM_LOCAL=${NVMK_CACHE_DIR}/npm-install.sh

  echo
  echo "Fetching ${NPM_REMOTE} -> ${NPM_LOCAL}"
  curl -# -L -f $NPM_REMOTE -o $NPM_LOCAL

  npm_config_cache=${NVMK_DIR}/npm-cache sh $NPM_LOCAL
  sed -i 's|\\c||g' ${NODE_DIR}/node_modules/npm/npmrc

  echo
  echo NPM $(${NODE_DIR}/npm -v) installed

  # https://github.com/npm/npm/issues/10165#issuecomment-152451743
  cat <<EOF
Please run in Command-Prompt:

  npm install -g npm@latest

EOF
}

case $NVMK_CMD in
  'ls')
    ls -1 $NVMK_DIR | grep -E '^v'
    exit
    ;;
  'rm')
    test -z "$NODE_VERSION" && usage
    test -d $NODE_DIR && rm -rf $NODE_DIR && echo "${NODE_VERSION} uninstalled"
    exit
    ;;
  'i')
    test -z "$NODE_VERSION" && usage
    ;;
  'root')
    test -z "$NODE_VERSION" && usage
    echo $NODE_DIR
    exit
    ;;
  'npm-i')
    test -z "$NODE_VERSION" && usage
    npm_install
    exit
    ;;
  'npm-ls')
    test -z "$NODE_VERSION" && usage
    ${NODE_DIR}/npm ls -g --depth 0 | grep '@' | grep -v npm | awk '{print $2}' | awk -F'@' '{print $1}'
    exit
    ;;
  'npm-i-pkgs')
    test -z "$NODE_VERSION" && usage
    test -z "$3" && usage
    FROM_NODE_VERSION=$3
    ${NVMK_DIR}/${NODE_VERSION}/npm install -g $(nvmk npm-ls $FROM_NODE_VERSION)
    exit
    ;;
  *)
    echo 'No such command:' ${NVMK_CMD}
    echo
    usage
    ;;
esac


### Install Node.js ###

test -f $NODE_EXE && echo "${NODE_VERSION} already installed" && exit 1

mkdir -p $NVMK_CACHE_DIR
mkdir -p $NODE_DIR

if [ -f $NODE_EXE_CACHE ]
then
  cp -v $NODE_EXE_CACHE $NODE_EXE
else
  echo "Fetching ${NODE_EXE_REMOTE} -> ${NODE_EXE}"
  curl -# -L -f $NODE_EXE_REMOTE -o $NODE_EXE

  if [ $? -ne 0 ]
  then
    rm -rf $NODE_DIR
    exit 1
  fi

  NODE_CHECKSUM=$(curl -s -L ${NODE_URL}/SHASUMS256.txt | grep $NODE_EXE_PATH | awk '{ print $1 }')
  NODE_CHECKSUM2=$(sha256sum $NODE_EXE | awk '{ print $1 }')
  test "$NODE_CHECKSUM" != "$NODE_CHECKSUM2" && echo "Failed checksum of ${NODE_EXE}" && exit 1

  cp $NODE_EXE $NODE_EXE_CACHE
fi

npm_install

cat <<EOF
Node.js $($NODE_EXE -v) installed
Add "${NODE_DIR}" to PATH environment variable

EOF
